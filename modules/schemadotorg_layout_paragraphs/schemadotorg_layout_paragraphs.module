<?php

/**
 * @file
 * Provides integration with the Layout Paragraphs module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\Entity\File;
use Drupal\paragraphs\Entity\ParagraphsType;
use Drupal\schemadotorg\Element\SchemaDotOrgSettings;

/**
 * Implements hook_help().
 */
function schemadotorg_layout_paragraphs_help(string $route_name, RouteMatchInterface $route_match): string|array|null {
  /** @var \Drupal\schemadotorg\SchemaDotOrgHelpManagerInterface $help_manager */
  $help_manager = \Drupal::service('schemadotorg.help_manager');
  return $help_manager->buildHelpPage($route_name, $route_match);
}

/**
 * Implements hook_schemadotorg_mapping_defaults_alter().
 */
function schemadotorg_layout_paragraphs_schemadotorg_mapping_defaults_alter(string $entity_type_id, ?string $bundle, string $schema_type, array &$defaults): void {
  /** @var \Drupal\schemadotorg_layout_paragraphs\SchemaDotOrgLayoutParagraphsManagerInterface $layout_pragraphs_mananger */
  $layout_pragraphs_mananger = \Drupal::service('schemadotorg_layout_paragraphs.manager');
  $layout_pragraphs_mananger->alterMappingDefaults($entity_type_id, $bundle, $schema_type, $defaults);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function schemadotorg_layout_paragraphs_form_schemadotorg_mapping_form_alter(array &$form, FormStateInterface &$form_state): void {
  /** @var \Drupal\schemadotorg_layout_paragraphs\SchemaDotOrgLayoutParagraphsManagerInterface $layout_pragraphs_mananger */
  $layout_pragraphs_mananger = \Drupal::service('schemadotorg_layout_paragraphs.manager');
  $layout_pragraphs_mananger->alterMappingForm($form, $form_state);
}

/**
 * Implements hook_schemadotorg_property_field_alter().
 *
 * @see schemadotorg_paragraphs_schemadotorg_property_field_alter()
 */
function schemadotorg_layout_paragraphs_schemadotorg_property_field_alter(
  string $schema_type,
  string $schema_property,
  array &$field_storage_values,
  array &$field_values,
  ?string &$widget_id,
  array &$widget_settings,
  ?string &$formatter_id,
  array &$formatter_settings
): void {
  /** @var \Drupal\schemadotorg_layout_paragraphs\SchemaDotOrgLayoutParagraphsManagerInterface $layout_pragraphs_mananger */
  $layout_pragraphs_mananger = \Drupal::service('schemadotorg_layout_paragraphs.manager');
  $layout_pragraphs_mananger->alterPropertyField(
    $schema_type,
    $schema_property,
    $field_storage_values,
    $field_values,
    $widget_id,
    $widget_settings,
    $formatter_id,
    $formatter_settings
  );
}

/* ************************************************************************** */
// Schema.org types settings form.
/* ************************************************************************** */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function schemadotorg_layout_paragraphs_form_schemadotorg_types_settings_form_alter(array &$form, FormStateInterface $form_state): void {
  $config = \Drupal::configFactory()->getEditable('schemadotorg_layout_paragraphs.settings');

  $form['schemadotorg_layout_paragraphs'] = [
    '#type' => 'details',
    '#title' => t('Layout Paragraphs settings'),
    '#open' => TRUE,
    '#tree' => TRUE,
  ];
  $form['schemadotorg_layout_paragraphs']['default_schema_types'] = [
    '#type' => 'schemadotorg_settings',
    '#settings_type' => SchemaDotOrgSettings::INDEXED,
    '#settings_format' => 'SchemaType',
    '#title' => t('Default Schema.org types'),
    '#description' => t('Enter Schema.org types that default to using layout paragraphs.'),
    '#description_link' => 'types',
    '#default_value' => $config->get('default_schema_types'),
  ];
  $form['schemadotorg_layout_paragraphs']['default_paragraph_types'] = [
    '#type' => 'schemadotorg_settings',
    '#settings_type' => SchemaDotOrgSettings::INDEXED,
    '#settings_format' => 'paragraph_type',
    '#title' => t('Default paragraph types'),
    '#description' => t('Enter the default paragraph types to be using with in layout paragraphs.'),
    '#default_value' => $config->get('default_paragraph_types'),
  ];

  // Add submit callback.
  $form['#submit'][] = 'schemadotorg_layout_paragraphs_settings_form_submit';
}

/**
 * Form submission handler for schemadotorg_properties_settings_form.
 *
 * @see schemadotorg_layout_paragraphs_form_schemadotorg_properties_settings_form_alter()
 */
function schemadotorg_layout_paragraphs_settings_form_submit(array &$form, FormStateInterface $form_state): void {
  $config = \Drupal::configFactory()->getEditable('schemadotorg_layout_paragraphs.settings');
  $values = $form_state->getValue('schemadotorg_layout_paragraphs');
  foreach ($values as $key => $value) {
    $config->set($key, $value);
  }
  $config->save();
}
