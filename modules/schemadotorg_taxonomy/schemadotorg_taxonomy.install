<?php

/**
 * @file
 * Install, update and uninstall functions for the Schema.org module.
 */

/**
 * Implements hook_modules_installed().
 */
function schemadotorg_taxonomy_modules_installed($modules) {
  $rebuild_router = FALSE;

  // Enable the term and vocabulary JSON-LD endpoints.
  if (in_array('schemadotorg_jsonld_endpoint', $modules)
    && \Drupal::moduleHandler()->moduleExists('schemadotorg_jsonld_endpoint')) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    $endpoints += [
      'taxonomy_term' => 'term',
      'taxonomy_vocabulary' => 'vocabulary',
    ];
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();
    $rebuild_router = TRUE;
  }

  if ($rebuild_router) {
    \Drupal::service('router.builder')->rebuild();
  }
}

/**
 * Implements hook_modules_uninstalled().
 */
function schemadotorg_taxonomy_modules_uninstalled($modules) {
  // Disable/remove the term and vocabulary JSON-LD endpoints.
  if (in_array('schemadotorg_jsonld_endpoint', $modules)
    && \Drupal::moduleHandler()->moduleExists('schemadotorg_jsonld_endpoint')) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    unset(
      $endpoints['taxonomy_term'],
      $endpoints['taxonomy_vocabulary']
    );
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();
  }
}

/**
 * Implements hook_install().
 */
function schemadotorg_taxonomy_install() {
  schemadotorg_taxonomy_modules_installed(['schemadotorg_jsonapi', 'schemadotorg_jsonld_endpoint']);
}

/**
 * Implements hook_install().
 */
function schemadotorg_taxonomy_uninstall() {
  schemadotorg_taxonomy_modules_uninstalled(['schemadotorg_jsonapi', 'schemadotorg_jsonld_endpoint']);
}
