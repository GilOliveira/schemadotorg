<?php

/**
 * @file
 * Install, update and uninstall functions for the Schema.org module.
 */

/**
 * Implements hook_modules_installed().
 */
function schemadotorg_taxonomy_modules_installed($modules) {
  // Enable the term and vocabulary JSON-LD endpoints.
  if (in_array('schemadotorg_jsonld_endpoint', $modules)) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    $endpoints += [
      'taxonomy_term' => 'term',
      'taxonomy_vocabulary' => 'vocabulary',
    ];
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();
  }

  // Add the term path prefix to JSON:API settings.
  if (in_array('schemadotorg_jsonapi', $modules)) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonapi.settings');
    $path_prefixes = $config->get('path_prefixes');
    $path_prefixes += ['taxonomy_term' => 'Term'];
    $config->set('path_prefixes', $path_prefixes);
    $config->save();
  }
}

/**
 * Implements hook_modules_uninstalled().
 */
function schemadotorg_taxonomy_modules_uninstalled($modules) {
  // Disable/remove the term and vocabulary JSON-LD endpoints.
  if (in_array('schemadotorg_jsonld_endpoint', $modules)) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonld_endpoint.settings');
    $endpoints = $config->get('entity_type_endpoints');
    unset(
      $endpoints['taxonomy_term'],
      $endpoints['taxonomy_vocabulary']
    );
    $config->set('entity_type_endpoints', $endpoints);
    $config->save();
  }

  // Remove the term path prefix from JSON:API settings.
  if (in_array('schemadotorg_jsonapi', $modules)) {
    $config = \Drupal::configFactory()->getEditable('schemadotorg_jsonapi.settings');
    $path_prefixes = $config->get('path_prefixes');
    unset($path_prefixes['taxonomy_term']);
    $config->set('path_prefixes', $path_prefixes);
    $config->save();
  }

}
/**
 * Implements hook_install().
 */
function schemadotorg_taxonomy_install() {
  schemadotorg_taxonomy_modules_installed(['schemadotorg_jsonapi', 'schemadotorg_jsonld_endpoint']);

  // Assign a weight 1 higher than the schemadotorg_jsonld_preview.module.
  // @see schemadotorg_preview_entity_view_alter()
  // @see schemadotorg_taxonomy_entity_view_alter()
  module_set_weight('schemadotorg_taxonomy', 1);
}

/**
 * Implements hook_install().
 */
function schemadotorg_taxonomy_uninstall() {
  schemadotorg_taxonomy_modules_uninstalled(['schemadotorg_jsonapi', 'schemadotorg_jsonld_endpoint']);
}
